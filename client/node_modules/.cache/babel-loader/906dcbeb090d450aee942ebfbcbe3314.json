{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ecook/Documents/projects/emilyweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/ecook/Documents/projects/emilyweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ecook/Documents/projects/emilyweb/client/src/sections/ContactMe.js\";\nimport React from 'react'; // import Grid from '@material-ui/core/Grid'\n\nimport { TextField, Typography, Avatar, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormState } from 'react-use-form-state';\nimport WidthContainer from '../WidthContainer';\nimport catImg from '../assets/catContact.jpg';\nimport { isFormSubmitDisabled } from '../utils';\nconst useStyles = makeStyles(theme => ({\n  catPhoto: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center'\n    }\n  },\n  avatar: {\n    margin: 10,\n    width: 300,\n    height: 300,\n    [theme.breakpoints.down('md')]: {\n      marginTop: 50,\n      width: 350,\n      height: 350\n    }\n  },\n  title: {\n    marginBottom: 40,\n    textAlign: 'center'\n  },\n  item: {\n    padding: '10px 0'\n  },\n  submitButton: {\n    textAlign: 'right',\n    paddingTop: 20\n  }\n})); // TODO\n// send email with api\n\nconst Home = () => {\n  const classes = useStyles();\n\n  const _useFormState = useFormState({}),\n        _useFormState2 = _slicedToArray(_useFormState, 2),\n        formState = _useFormState2[0],\n        _useFormState2$ = _useFormState2[1],\n        text = _useFormState2$.text,\n        email = _useFormState2$.email;\n\n  const inputs = {\n    name: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'name',\n      label: 'Name',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    subject: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'subject',\n      label: 'Subject',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    email: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'email',\n      label: 'Email',\n      inputType: email,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    message: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'message',\n      label: 'Message',\n      inputType: text,\n      variant: 'outlined',\n      multiline: true,\n      rows: 4,\n      rowsMax: 12,\n      validator: {\n        required: true\n      }\n    }\n  };\n  const disableSubmit = isFormSubmitDisabled(inputs, formState); // TODO\n  // snackbar on successful sent, clear form (useEffect)\n\n  return React.createElement(WidthContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    id: \"contactMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Contact Me\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, Object.entries(inputs).map(([index, _ref]) => {\n    let gridWidth = _ref.gridWidth,\n        name = _ref.name,\n        inputType = _ref.inputType,\n        rest = _objectWithoutProperties(_ref, [\"gridWidth\", \"name\", \"inputType\"]);\n\n    return React.createElement(Grid, Object.assign({\n      key: index,\n      item: true\n    }, gridWidth, {\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(TextField, Object.assign({}, inputType({\n      name\n    }), {\n      name: name,\n      fullWidth: true\n    }, rest, {\n      error: formState.errors[name] ? true : false,\n      helperText: formState.errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })));\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.submitButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: disableSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Send Email\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 5,\n    className: classes.catPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Sterling Lion\",\n    src: catImg,\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })))))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/ecook/Documents/projects/emilyweb/client/src/sections/ContactMe.js"],"names":["React","TextField","Typography","Avatar","Grid","Button","makeStyles","useFormState","WidthContainer","catImg","isFormSubmitDisabled","useStyles","theme","catPhoto","display","justifyContent","breakpoints","down","alignItems","alignContent","avatar","margin","width","height","marginTop","title","marginBottom","textAlign","item","padding","submitButton","paddingTop","Home","classes","formState","text","email","inputs","name","gridWidth","xs","label","inputType","variant","validator","required","subject","message","multiline","rows","rowsMax","disableSubmit","section","Object","entries","map","index","rest","errors","button"],"mappings":"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","sourcesContent":["import React from 'react'\n// import Grid from '@material-ui/core/Grid'\nimport { TextField, Typography, Avatar, Grid, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useFormState } from 'react-use-form-state'\n\nimport WidthContainer from '../WidthContainer'\nimport catImg from '../assets/catContact.jpg'\nimport { isFormSubmitDisabled } from '../utils'\n\nconst useStyles = makeStyles(theme => ({\n  catPhoto: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center'\n    }\n  },\n  avatar: {\n    margin: 10,\n    width: 300,\n    height: 300,\n    [theme.breakpoints.down('md')]: {\n      marginTop: 50,\n      width: 350,\n      height: 350\n    }\n  },\n  title: {\n    marginBottom: 40,\n    textAlign: 'center'\n  },\n  item: {\n    padding: '10px 0'\n  },\n  submitButton: {\n    textAlign: 'right',\n    paddingTop: 20\n  }\n}))\n\n// TODO\n// send email with api\n\nconst Home = () => {\n  const classes = useStyles()\n  const [formState, { text, email }] = useFormState({})\n\n  const inputs = {\n    name: {\n      gridWidth: { xs: 12 },\n      name: 'name',\n      label: 'Name',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    subject: {\n      gridWidth: { xs: 12 },\n      name: 'subject',\n      label: 'Subject',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    email: {\n      gridWidth: { xs: 12 },\n      name: 'email',\n      label: 'Email',\n      inputType: email,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    message: {\n      gridWidth: { xs: 12 },\n      name: 'message',\n      label: 'Message',\n      inputType: text,\n      variant: 'outlined',\n      multiline: true,\n      rows: 4,\n      rowsMax: 12,\n      validator: {\n        required: true\n      }\n    }\n  }\n\n  const disableSubmit = isFormSubmitDisabled(inputs, formState)\n\n  // TODO\n  // snackbar on successful sent, clear form (useEffect)\n\n  return (\n    <WidthContainer>\n      <section id=\"contactMe\">\n        <div className={classes.section}>\n          <Typography variant=\"h3\" className={classes.title}>\n            Contact Me\n          </Typography>\n          {/* <Typography variant=\"h5\">Contact Me</Typography> */}\n          <form>\n            <Grid container>\n              <Grid item xs={12} sm={12} md={7}>\n                <Grid container>\n                  {Object.entries(inputs).map(\n                    ([index, { gridWidth, name, inputType, ...rest }]) => (\n                      <Grid key={index} item {...gridWidth} className={classes.item}>\n                        <TextField\n                          {...inputType({\n                            name\n                          })}\n                          name={name}\n                          fullWidth\n                          {...rest}\n                          error={formState.errors[name] ? true : false}\n                          helperText={formState.errors[name]}\n                        />\n                      </Grid>\n                    )\n                  )}\n                  <Grid item xs={12} className={classes.submitButton}>\n                    <Button\n                      disabled={disableSubmit}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                    >\n                      Send Email\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={12} md={5} className={classes.catPhoto}>\n                <Avatar alt=\"Sterling Lion\" src={catImg} className={classes.avatar} />\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </section>\n    </WidthContainer>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}